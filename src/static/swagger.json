{
  "openapi": "3.0.0",
  "info": {
    "description": "User API for Contact Tracing",
    "version": "1.0.0",
    "title": "User API"
  },
  "tags": [
    {
      "name": "establishments",
      "description": "Generation of spaces codes related to establishments"
    }
  ],
  "paths": {
    "/establishments": {
      "post": {
        "tags": [
          "establishments"
        ],
        "summary": "Register new establishment",
        "operationId": "registerEstablishment",
        "requestBody": {
          "description": "Created establishment object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EstablishmentNew"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Establishment registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing fields / Invalid visibility"
          },
          "409": {
            "description": "Establishment already registered"
          }
        }
      },
      "get": {
        "tags": [
          "establishments"
        ],
        "summary": "Get all establishments",
        "description": "",
        "operationId": "getEstablishments",
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Establishments registered in Visit Manager",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Establishment"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/establishments/{establishmentId}": {
      "get": {
        "tags": [
          "establishments"
        ],
        "summary": "Get establishment by id",
        "description": "",
        "operationId": "getEstablishmentById",
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/pathEstablishmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Establishment registered in Visit Manager",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Establishment"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Establishment not found"
          }
        }
      },
      "put": {
        "tags": [
          "establishments"
        ],
        "summary": "Delete Establishment by id",
        "description": "",
        "operationId": "editEstablishment",
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/pathEstablishmentId"
          }
        ],
        "requestBody": {
          "description": "Edit establishment object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EditEstablishment"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Establishment edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Establishment"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid fields / Invalid visibility"
          },
          "404": {
            "description": "Establishment not found"
          }
        }
      },
      "delete": {
        "tags": [
          "establishments"
        ],
        "summary": "Delete establishment by id",
        "description": "",
        "operationId": "deleteEstablishmentById",
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/pathEstablishmentId"
          }
        ],
        "responses": {
          "204": {
            "description": "Establishment deleted successfully"
          },
          "404": {
            "description": "Establishment not found"
          }
        }
      }
    },
    "/visits": {
      "post": {
        "tags": [
          "visits"
        ],
        "summary": "Register new visit",
        "operationId": "addVisit",
        "parameters": [
          {
            "in": "header",
            "name": "genux-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Created visit object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Visit"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visit registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing fields / Invalid visibility"
          },
          "404": {
            "description": "Space linked to the scan code not found"
          },
          "409": {
            "description": "Establishment already registered"
          }
        }
      }
    },
    "/infected": {
      "post": {
        "tags": [
          "infected"
        ],
        "summary": "Register new infected",
        "operationId": "addInfected",
        "parameters": [
          {
            "in": "header",
            "name": "access-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "genux-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Detect infected visit",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userGeneratedCode": {
                    "type": "string",
                    "example": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Infected registered successfully"
          },
          "400": {
            "description": "Missing fields"
          },
          "404": {
            "description": "Visit not found"
          }
        }
      }
    }
  },
  "/rules": {
    "post": {
      "tags": [
        "rules"
      ],
      "summary": "Create new rules",
      "operationId": "addRules",
      "requestBody": {
        "description": "Created rule object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Rule"
                }
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Rule created successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Missing fields / Invalid visibility"
        }
      }
    },
    "delete": {
      "tags": [
        "rules"
      ],
      "summary": "Delete rules",
      "operationId": "deleteRules",
      "requestBody": {
        "description": "Created rule object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ruleId"
                  }
                ]
              }
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "Rule deleted successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "400": {
          "description": "Missing fields / Invalid visibility"
        }
      }
    },
    "get": {
      "tags": [
        "rules"
      ],
      "summary": "Get all rules",
      "description": "",
      "operationId": "getRules",
      "responses": {
        "200": {
          "description": "Rules registered in Virus Tracker",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Rule"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": [
        "rules"
      ],
      "summary": "Edit Rules",
      "description": "",
      "operationId": "editRules",
      "requestBody": {
        "description": "Edit rules object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Rule"
                }
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Rules edited successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Rule"
                  }
                ]
              }
            }
          }
        },
        "400": {
          "description": "Invalid fields / Invalid visibility"
        }
      }
    }
  },
  "/rules/{ruleId}": {
    "get": {
      "tags": [
        "rules"
      ],
      "summary": "Get rule by id",
      "description": "",
      "operationId": "getSingleRule",
      "parameters": [
        {
          "$ref": "#/components/parameters/ruleId"
        }
      ],
      "responses": {
        "200": {
          "description": "Rule registered in Virus Tracker",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Rule"
                  }
                ]
              }
            }
          }
        },
        "404": {
          "description": "Rule not found"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "pathEstablishmentId": {
        "in": "path",
        "name": "establishmentId",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "schemas": {
      "Establishment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "type": {
            "type": "string",
            "example": "restaurant"
          },
          "name": {
            "type": "string",
            "example": "Mc Donalds"
          },
          "email": {
            "type": "string",
            "example": "mcdonalds@gmail.com"
          },
          "address": {
            "type": "string",
            "example": "Cabildo 1010"
          },
          "city": {
            "type": "string",
            "example": "CABA"
          },
          "province": {
            "type": "string",
            "example": "CABA"
          },
          "zip": {
            "type": "string",
            "example": "1430ACV"
          },
          "country": {
            "type": "string",
            "example": "Argentina"
          },
          "spaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Primer piso"
                },
                "hasExit": {
                  "type": "boolean"
                },
                "m2": {
                  "type": "integer"
                },
                "openPlace": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "EstablishmentNew": {
        "type": "object",
        "required": [
          "type",
          "name",
          "email",
          "address",
          "city",
          "province",
          "zip",
          "country",
          "spaces"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "restaurant"
          },
          "name": {
            "type": "string",
            "example": "Mc Donalds"
          },
          "email": {
            "type": "string",
            "example": "mcdonalds@gmail.com"
          },
          "address": {
            "type": "string",
            "example": "Cabildo 1010"
          },
          "city": {
            "type": "string",
            "example": "CABA"
          },
          "state": {
            "type": "string",
            "example": "CABA"
          },
          "zip": {
            "type": "string",
            "example": "1430ACV"
          },
          "country": {
            "type": "string",
            "example": "Argentina"
          },
          "spaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Primer piso"
                },
                "hasExit": {
                  "type": "boolean"
                },
                "m2": {
                  "type": "integer"
                },
                "openPlace": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "EditEstablishment": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "restaurant"
          },
          "name": {
            "type": "string",
            "example": "Mc Donalds"
          },
          "email": {
            "type": "string",
            "example": "mcdonalds@gmail.com"
          },
          "address": {
            "type": "string",
            "example": "Cabildo 1010"
          },
          "city": {
            "type": "string",
            "example": "CABA"
          },
          "state": {
            "type": "string",
            "example": "CABA"
          },
          "zip": {
            "type": "string",
            "example": "1430ACV"
          },
          "country": {
            "type": "string",
            "example": "Argentina"
          }
        }
      },
      "Visit": {
        "type": "object",
        "required": [
          "scanCode",
          "userGeneratedCode",
          "timestamp"
        ],
        "properties": {
          "scanCode": {
            "type": "string",
            "example": "MNPQWOEUPO452345"
          },
          "userGeneratedCode": {
            "type": "string",
            "example": "1PWIOEJPOVUP12OI34J"
          },
          "timestamp": {
            "type": "datetime",
            "example": "1970-01-01 00:00:01"
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "index": {
            "type": "number",
            "example": 1
          },
          "contagionRisk": {
            "type": "string",
            "example": "Alto"
          },
          "m2Value": {
            "type": "number",
            "example": 100
          },
          "m2Cmp": {
            "type": "string",
            "example": ">"
          }
        }
      },
      "ruleId": {
        "type": "string",
        "example": "RuleId"
      }
    }
  }
}